/**
 * Created by anton.milko on 30-May-18.
 *
 * contains ajax calls related to ProSharing feature
 */

wl.app.module("shareCalls", function(oModule, oApp) {
  
  if (Utils.isIE()) {
    //disable ie 11 caching GET requests
    $.ajaxSetup({ cache: false })
  }

  this.getFavorites = function() {
    var d = $.Deferred();
    $.get('/deviceShare/favorites', function(response) {
      if (response.data) {
        d.resolve(response.data);
      } else {
        d.resolve({count: 0, devices: []});
      }
    });
    return d.promise();
  };

  this.markFavorite = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/markFavorite/' + systemId, function(response) {
      if (response.data) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.unmarkFavorite = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/unmarkFavorite/' + systemId, function(response) {
      if (response.data) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.getDeviceShares = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceShares/' + systemId, function(response) {
      if (response.data) {
        d.resolve(response.data);
      } else {
        d.resolve({count: 0, devices: []});
      }
    });
    return d.promise();
  };

  this.unshareDevice = function(deviceShareId) {
    var d = $.Deferred();
    $.get('/deviceShare/unshareDevice/' + deviceShareId, function(
      response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.unshareDeviceSharedWithUserId = function(systemId, sharedWithUserId) {
    var d = $.Deferred();
    $.get('/deviceShare/unshareDevice/' + systemId + '/' +
      sharedWithUserId,
      function(response) {
        if (response) {
          d.resolve(response);
        }
      });
    return d.promise();
  };

  this.getDevicesUpgradedCount = function() {
    var d = $.Deferred();
    $.get('/deviceShare/devicesUpgradedCount', function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.getDeviceUpgradesAllowedCount = function() {
    var d = $.Deferred();
    $.get('/deviceShare/deviceUpgradesAllowedCount', function(response) {
      if (response) {
        d.resolve(response);
        wl.app.vent.trigger('deviceUpgradesAllowedCount:set', response.data);
      }
    });
    return d.promise();
  };

  this.upgradeDevice = function(systemId) {
    var d = $.Deferred();
    $.post('/deviceShare/upgradeDevice', {
      systemId: systemId
    }, function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.downgradeDevice = function(systemId) {
    var d = $.Deferred();
    $.post('/deviceShare/downgradeDevice', {
      systemId: systemId
    }, function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.searchUsers = function(searchInput, systemId) {
    var d = $.Deferred();
    $.post('/deviceShare/searchUsers', {
      searchInput: searchInput,
      systemId: systemId
    }, function(response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.shareDevice = function(shareWithUserId, systemId, isBasicShare) {
    var d = $.Deferred();
    $.post('/deviceShare/shareDevice', {
      shareWithUserId: shareWithUserId,
      systemId: systemId,
      isBasicShare: isBasicShare
    }, function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.sharePublicDevice = function(shareWithUserId, systemId) {
    var d = $.Deferred();
    $.post('/deviceShare/publicShare', {
      shareWithUserId: shareWithUserId,
      systemId: systemId
    }, function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.getDeviceUpgrades = function() {
    var d = $.Deferred();
    $.get('/deviceShare/deviceUpgrades', function(response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.getDevicesSharedWithMe = function() {
    var d = $.Deferred();
    $.get('/deviceShare/devicesSharedWithMe', function(response) {
      if (response.data) {
        d.resolve(response.data);
      } else {
        d.resolve({count: 0, devices: []});
      }
    });
    return d.promise();
  };

  this.getDeviceSharedCount = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceSharedCount/' + systemId, function(response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.getDeviceSharesAllowedCount = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceSharesAllowedCount/' + systemId, function(
      response) {
      if (response) {
        d.resolve(response);
      }
    });
    return d.promise();
  };

  this.getDeviceUpgradedBy = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceUpgradedBy/' + systemId, function(response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.getDeviceSubscriptionTier = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceSubscriptionTier/' + systemId, function(
      response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.getUploads = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/uploads/' + systemId, function(response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.upload = function(deviceUpload, isBasic) {
    var d = $.Deferred();
    $.ajax({
      url: '/deviceShare/upload?isBasic=' + isBasic,
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify(deviceUpload),
      success: function(response) {
        d.resolve(response);
      }
    })
    return d.promise();
  };

  this.removeUpload = function(systemId, deviceUploadType) {
    var d = $.Deferred();
    $.get('/deviceShare/removeUpload/' + systemId + '/' +
      deviceUploadType,
      function(response) {
        if (response) {
          d.resolve(response);
        }
      });
    return d.promise();
  };

  this.getDeviceSubscriptionType = function(systemId) {
    var d = $.Deferred();
    $.get('/deviceShare/deviceSubscriptionType/' + systemId, function(
      response) {
      if (response.data) {
        d.resolve(response.data);
      }
    });
    return d.promise();
  };

  this.getUrlToken = function(sDid) {
    var d = $.Deferred();
    $.ajax({
      type: "GET",
      url: "/device/getUrlToken/" + sDid,
      success: function(response) {
        if (response.data) {
          d.resolve(response.data);
        } else {
          d.resolve({urlToken: null});
        }
      },
      error: function(err) {}
    });
    return d.promise();
  };
  
  this.generateUrlToken = function(sDid) {
    var d = $.Deferred();
    $.ajax({
      type: "GET",
      url: "/device/generateUrl/" + sDid,
      success: function(response) {
        if (response.data) {
          console.log("Generated device url " + response.data
            .urlToken);
          d.resolve(response.data);
        }
      },
      error: function(err) {}
    });
    return d.promise();
  }
});
